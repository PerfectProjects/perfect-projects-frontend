service: ${self:custom.prefix}-frontend

frameworkVersion: '2'

provider:
  name: aws
  runtime: python3.8
  lambdaHashingVersion: 20201221
  variablesResolutionMode: 20210326
  region: ${opt:region}
  stage: ${opt:stage}
  stackName: ${self:custom.prefix}-frontend
  iam:
    role:
      name: ${self:custom.prefix}-frontend-role
      statements:
        - Effect: 'Allow'
          Action: '*'
          Resource: '*'
  deploymentBucket:
    name: ${self:custom.prefix}-deployments
  environment:
    REGION: ${opt:region}
    STAGE: ${opt:stage}

custom:
  prefix: perfect-projects-${self:provider.stage}-${self:provider.region}
  s3Sync:
    - bucketName: ${self:custom.prefix}-frontend
      localDir: dist/perfect-projects-frontend
  customCertificate:
    certificateName: ${opt:stage}-${opt:region}.perfect-projects.link
    hostedZoneIds: Z046301435EGQHE8A33R6
    region: us-east-1 # This specific region is required due to an error from Serverless Domain Manager
    subjectAlternativeNames:
      - www.${opt:stage}-${opt:region}.perfect-projects.link
      - ${opt:stage}-${opt:region}.perfect-projects.link
  certificateArn:
    dev-eu-central-1: arn:aws:acm:us-east-1:499329456290:certificate/1061dd4f-c76c-43c3-a107-b78d57e0ed39
plugins:
  - serverless-deployment-bucket
  - serverless-certificate-creator
  - serverless-s3-sync

resources:
  Resources:
    frontendS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.prefix}-frontend
        AccessControl: Private
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: index.html
    frontendS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: frontendS3Bucket
        PolicyDocument:
          Statement:
            -
              Action:
                - "s3:GetObject"
              Effect: Allow
              Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { Ref : frontendS3Bucket }, "/*" ] ]  }
              Principal:
                AWS: {
                  "Fn::Join" : [" ", [
                      "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity",
                      { Ref: cloudFrontOriginAccessIdentity }
                  ] ]
                }
    frontendCloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Origins:
            - DomainName:
                Fn::Join: [
                    "", [
                    { "Ref": "frontendS3Bucket" },
                    ".s3.amazonaws.com"
                  ]
                ]
              Id: frontend
              S3OriginConfig:
                OriginAccessIdentity:
                  { "Fn::Join" : [
                      "", ["origin-access-identity/cloudfront/", { Ref: cloudFrontOriginAccessIdentity } ]
                  ]  }
          Enabled: 'true'
          Aliases:
            - www.${opt:stage}-${opt:region}.perfect-projects.link
            - ${opt:stage}-${opt:region}.perfect-projects.link
          DefaultRootObject: index.html
          CustomErrorResponses:
            - ErrorCode: 404
              ResponseCode: 200
              ResponsePagePath: /index.html
            - ErrorCode: 403
              ResponseCode: 200
              ResponsePagePath: /index.html
          DefaultCacheBehavior:
            AllowedMethods:
              - DELETE
              - GET
              - HEAD
              - OPTIONS
              - PATCH
              - POST
              - PUT
            TargetOriginId: frontend
            ForwardedValues:
              QueryString: 'false'
              Cookies:
                Forward: none
            ViewerProtocolPolicy: redirect-to-https
          ViewerCertificate:
            AcmCertificateArn: ${self:custom.certificateArn.${self:provider.stage}-${self:provider.region}}
            SslSupportMethod: sni-only
    frontendDNSNames:
      Type: AWS::Route53::RecordSetGroup
      Properties:
        HostedZoneId: Z046301435EGQHE8A33R6
        RecordSets:
          - Name: ${opt:stage}-${opt:region}.perfect-projects.link
            Type: A
            AliasTarget:
              HostedZoneId: Z2FDTNDATAQYW2
              DNSName: !GetAtt [ frontendCloudFrontDistribution, DomainName ]
              EvaluateTargetHealth: false
          - Name: www.${opt:stage}-${opt:region}.perfect-projects.link
            Type: A
            AliasTarget:
              HostedZoneId: Z2FDTNDATAQYW2
              DNSName: !GetAtt [ frontendCloudFrontDistribution, DomainName ]
              EvaluateTargetHealth: false
    cloudFrontOriginAccessIdentity:
      Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
      Properties:
        CloudFrontOriginAccessIdentityConfig:
          Comment: OAI for ${self:custom.prefix}
